{"ast":null,"code":"var _jsxFileName = \"/home/nassim/Desktop/besmeleh/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getAll, addOne } from './action';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.Redit.user);\n  useEffect(() => {\n    dispatch(getAll());\n  }, []);\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n\n  const test = () => {\n    dispatch(addOne({\n      movie\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [user.map(el => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: el.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: test,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"title\",\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"author\",\n        onChange: e => setAuthor(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"SWQKunbH4yeSaDiq3ptDQcu2Pbk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/nassim/Desktop/besmeleh/src/App.js"],"names":["useSelector","useDispatch","getAll","addOne","useEffect","useState","App","dispatch","user","state","Redit","title","setTitle","author","setAuthor","test","movie","map","el","e","target","value"],"mappings":";;;;AACA,OAAO,WAAP;AACA,SAAQA,WAAR,EAAoBC,WAApB,QAAsC,aAAtC;AACA,SAAQC,MAAR,EAAeC,MAAf,QAA4B,UAA5B;AAEA,SAAQC,SAAR,EAAkBC,QAAlB,QAAiC,OAAjC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,QAAQ,GAAEN,WAAW,EAA3B;AACA,QAAMO,IAAI,GAAGR,WAAW,CAAES,KAAD,IAASA,KAAK,CAACC,KAAN,CAAYF,IAAtB,CAAxB;AACAJ,EAAAA,SAAS,CAAC,MAAI;AACZG,IAAAA,QAAQ,CAAEL,MAAM,EAAR,CAAR;AACD,GAFQ,EAEP,EAFO,CAAT;AAGA,QAAM,CAACS,KAAD,EAAOC,QAAP,IAAiBP,QAAQ,CAAC,EAAD,CAA/B;AAEA,QAAM,CAACQ,MAAD,EAAQC,SAAR,IAAmBT,QAAQ,CAAC,EAAD,CAAjC;;AACA,QAAMU,IAAI,GAAG,MAAI;AACfR,IAAAA,QAAQ,CAACJ,MAAM,CAAC;AAACa,MAAAA;AAAD,KAAD,CAAP,CAAR;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,eACGR,IAAI,CAACS,GAAL,CAASC,EAAE,iBACV;AAAA,gBACGA,EAAE,CAACP;AADN;AAAA;AAAA;AAAA;AAAA,YADD,CADH,eAME;AAAM,MAAA,QAAQ,EAAEI,IAAhB;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,OAA/B;AAAuC,QAAA,QAAQ,EAAGI,CAAD,IAAKP,QAAQ,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV;AAA9D;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,QAA/B;AAAyC,QAAA,QAAQ,EAAGF,CAAD,IAAKL,SAAS,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV;AAAjE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GA3BQf,G;UACSL,W,EACHD,W;;;KAFNM,G;AA6BT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport {useSelector,useDispatch} from 'react-redux'\nimport {getAll,addOne} from './action'\n\nimport {useEffect,useState} from 'react';\n\nfunction App() {\n  const dispatch =useDispatch()\n  const user = useSelector((state)=>state.Redit.user);\n  useEffect(()=>{\n    dispatch( getAll())\n  },[])\n  const [title,setTitle]=useState('')\n\n  const [author,setAuthor]=useState('')\n  const test = ()=>{\n    dispatch(addOne({movie}))\n  }\n\n  return (\n    <div className=\"App\">\n      {user.map(el=>(\n        <div>\n          {el.title}\n        </div>\n      ))}\n      <form onSubmit={test}>\n        <input type=\"text\" placeholder='title' onChange={(e)=>setTitle(e.target.value)} />\n        <input type=\"text\" placeholder='author'  onChange={(e)=>setAuthor(e.target.value)} />\n        <input type=\"submit\"   />\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}