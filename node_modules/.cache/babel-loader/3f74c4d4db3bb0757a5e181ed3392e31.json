{"ast":null,"code":"var _jsxFileName = \"/home/nassim/Desktop/besmeleh/src/hoc/hoc.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Hoc = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const user = useSelector(props.reducer);\n  useEffect(() => {\n    dispatch(props.action);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [user.map(el => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [nom, \" \", size]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this)), \"    \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Hoc, \"D+tpgEc7oJbenxkkKtcwSrPV108=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Hoc;\nexport default Hoc;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hoc\");","map":{"version":3,"sources":["/home/nassim/Desktop/besmeleh/src/hoc/hoc.js"],"names":["React","useEffect","useState","useSelector","useDispatch","Hoc","props","dispatch","user","reducer","action","map","el","nom","size"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAkBC,QAAlB,QAAiC,OAAjC;AACA,SAAQC,WAAR,EAAoBC,WAApB,QAAsC,aAAtC;;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AAAA;;AACnB,QAAMC,QAAQ,GAAEH,WAAW,EAA3B;AACA,QAAMI,IAAI,GAAGL,WAAW,CAACG,KAAK,CAACG,OAAP,CAAxB;AACCR,EAAAA,SAAS,CAAC,MAAI;AACXM,IAAAA,QAAQ,CAAED,KAAK,CAACI,MAAR,CAAR;AAGA,GAJM,EAIL,EAJK,CAAT;AAMD,sBACI;AAAA,eACNF,IAAI,CAACG,GAAL,CAASC,EAAE,iBACT;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA,iBACOC,GADP,OACaC,IADb;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADM;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAjBD;;GAAMT,G;UACcD,W,EACHD,W;;;KAFXE,G;AAmBN,eAAeA,GAAf","sourcesContent":["import React from 'react'\nimport {useEffect,useState} from 'react';\nimport {useSelector,useDispatch} from 'react-redux'\n\nconst Hoc = (props) => {\n    const dispatch =useDispatch()\n    const user = useSelector(props.reducer)\n     useEffect(()=>{\n        dispatch( props.action)\n       \n       \n       },[])\n\n    return (\n        <div>\n {user.map(el=>(\n    <div className=\"\">\n          {nom} {size}\n         </div>\n  ))}    </div>\n    )\n}\n\nexport default Hoc\n"]},"metadata":{},"sourceType":"module"}